version: "3"

volumes:
  web-html:

services:

  # don't forget to rebuild!
  # stack image container --docker
  api:
    image: timely:latest
    command: /usr/local/bin/timely api
    ports:
    - "3001:3002"
    volumes:
      - web-html:/var/www/html
    environment:
      - PORT=3002
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432
      - SERVE_DIR=/var/www/html


  # You must rebuild to refresh!
  # docker build -t timely-web ./web
  web:
    image: timely-web:latest
    volumes:
      - web-html:/var/www/html


  # this attempts to run migrations every time you up
  # is that what we want? We can already run it from API
  # >> docker-compose run api /bin/bash
  # >> /usr/local/bin/timely initialize
  # initialize:
  #   image: timely:latest
  #   command: /usr/local/bin/timely initialize
  #   environment:
  #     - AMQP=amqp://guest:guest@amqp:5672
  #     - POSTGRES=postgresql://postgres@postgres:5432


  # scheduler
  schedule:
    image: timely:latest
    command: /usr/local/bin/timely schedule
    environment:
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432

  # workers
  work-account-onboard:
    image: timely:latest
    command: /usr/local/bin/timely work-account-onboard
    environment:
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432

  work-account-update:
    image: timely:latest
    command: /usr/local/bin/timely work-account-update
    environment:
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432

  work-advance-send:
    image: timely:latest
    command: /usr/local/bin/timely work-advance-send
    environment:
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432

  work-advance-collect:
    image: timely:latest
    command: /usr/local/bin/timely work-advance-collect
    environment:
      - AMQP=amqp://guest:guest@amqp:5672
      - POSTGRES=postgresql://postgres@postgres:5432

  postgres:
    image: postgres
    ports:
    - "5432:5432"

  amqp:
    image: rabbitmq:3-management
    ports:
    - "5672:5672"
    - "15672:15672"

