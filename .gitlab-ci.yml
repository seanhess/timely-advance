# https://vadosware.io/post/zero-to-continuous-integrated-testing-a-haskell-project-with-gitlab/
# Caching! https://docs.gitlab.com/ee/ci/yaml/README.html#cache

# this should match stack.yaml
# image: fpco/stack-build:lts-13.7
image: haskell:8


# TODO: docker (for uploading)
before_script:
  - apt-get update -y
  - apt-get install libpq-dev -y

  # for Elm
  - curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
  - sudo apt-get install -y nodejs
  - npm install -g elm
  - elm make --yes src/Main.elm --output=public/script.js


# these stages should match the pipeline
stages:
  - build
  - test
  - deploy


build:
  stage: build
  script:
    - cd server
    - stack setup
    - stack build --test --only-dependencies

build-elm:
  stage: build
  script:
    - cd web
    - elm --version
    - elm make src/Main.elm --output=elm.js


test:
  stage: test
  script:
    - cd server
    - stack test


deploy:
  stage: deploy
  script:
    - echo "DEPLOY - it looks like nothing is cached between these"
    - cd server
    - stack image container
    # - docker run -it timely /usr/local/bin/timely


# before_script:
  # - apt-get update
  # - apt-get install make xz-utils

cache:
  paths:
    - .stack
    - server/.stack-work

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack"
