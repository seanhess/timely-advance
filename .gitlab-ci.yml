# https://vadosware.io/post/zero-to-continuous-integrated-testing-a-haskell-project-with-gitlab/
# Caching! https://docs.gitlab.com/ee/ci/yaml/README.html#cache
# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
# https://angristan.xyz/build-push-docker-images-gitlab-ci/
# NOTE: don't comment out the scripts, because it removes the cache

variables:
  VERSION: "0.5"
  STACK_ROOT:   "${CI_PROJECT_DIR}/.stack"
  RELEASE:      "$VERSION.$CI_COMMIT_SHORT_SHA"
  IMAGE_SERVER: "$CI_REGISTRY/timely-advance/timely"
  IMAGE_WEB:    "$CI_REGISTRY/timely-advance/timely/web"


# these stages should match the pipeline
stages:
  - build # we are running tests in the build stage for now.
  - container
  - test
  - deploy


build-web:
  stage: build
  before_script:
    - docker --version
    - elm --version
  cache:
    paths:
      - web/elm-stuff
  script:
    - cd web

    - echo "module Version exposing (..)" > src/Version.elm
    - echo "version = \"$RELEASE\""      >> src/Version.elm
    - cat src/Version.elm

    - elm make src/Main.elm --optimize --output=build/elm.js
    - docker build -t $IMAGE_WEB:$RELEASE .


build-server:
  stage: build
  before_script:
    - docker --version
    - stack --version
    - echo $STACK_ROOT
    - pwd
    - ls .stack
  script:
    - cd server

    # it's got to be the docker image, right? But how was it ever working before?
    - stack docker pull
    - stack setup --docker
    - stack build --docker --only-dependencies


container:
  stage: container
  before_script:
    - ls .stack
  script:
    - cd server

    - echo "module Version where version = \"$RELEASE\"" > src/Version.hs
    - cat src/Version.hs

    - stack image container --docker # --ghc-options -Werror # build and run tests
    - docker tag timely:latest $IMAGE_SERVER:$RELEASE


test:
  stage: test
  script:
    - cd server
    - docker run $IMAGE_SERVER:$RELEASE /usr/local/bin/timely-test


deploy:
  stage: deploy
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd server
    - docker push $IMAGE_SERVER:$RELEASE
    - docker push $IMAGE_WEB:$RELEASE
    - echo "Published - $RELEASE"

cache:
  paths:
    - .stack
    - server/.stack-work
    - server/datamodel/.stack-work

