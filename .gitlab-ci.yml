# https://vadosware.io/post/zero-to-continuous-integrated-testing-a-haskell-project-with-gitlab/
# Caching! https://docs.gitlab.com/ee/ci/yaml/README.html#cache

# this should match stack.yaml
# image: fpco/stack-build:lts-13.7
image: haskell:8


# TODO: docker (for uploading)
# TODO: make my own image? with haskell:8, node, etc?

# before_script:
#   - apt-get update -y

# these stages should match the pipeline
stages:
  - build
  - test
  - deploy


build-elm:
  stage: build
  image: node:8
  cache:
    paths: []
  script:
    - cd web
    - pwd
    - ls .
    - ./elm --version
    - ./elm make src/Main.elm --output=elm.js
  before_script:
    - npm install elm
    - mv node_modules/.bin/elm ./web/elm
    - pwd
    - ls .
    - ls web
  artifacts:
    paths:
    - web/elm.js



build:
  stage: build
  script:
    - cd server
    - stack setup
    - stack build --fast --test --only-dependencies
  before_script:
    - apt-get update -y
    - apt-get install libpq-dev -y



test:
  stage: test
  script:
    - cd server
    - stack test --fast


deploy:
  stage: deploy
  script:
    - echo "DEPLOY"
    - cd server
    - stack image container
    # - docker run -it timely /usr/local/bin/timely

cache:
  paths:
    - .stack
    - server/.stack-work

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack"
